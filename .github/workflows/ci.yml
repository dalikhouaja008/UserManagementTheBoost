name: Backend CI

on:
  workflow_dispatch: 
  push:
    branches: [ test_ci ]
    paths:
      - '.github/workflows/ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        mongodb-version: ['7.0']

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Install dependencies
      run: npm ci
      
    - name: Build
      if: always()  # This ensures the step runs even if previous steps failed
      run: npm run build

    # - name: Run unit tests
    #   if: always()  # This ensures the step runs even if previous steps failed
    #   run: npm run test

    # - name: Run e2e tests
    #   if: always()  # This ensures the step runs even if previous steps failed
    #   run: npm run test:e2e

    # - name: Generate test coverage
    #   if: always()  # This ensures the step runs even if previous steps failed
    #   run: npm run test:cov

    # - name: Upload coverage reports
    #   if: always()  # This ensures the step runs even if previous steps failed
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: coverage-report
    #     path: coverage/
    #     retention-days: 7

     # Docker Build and Push Steps
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/backend:latest
          ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/backend:buildcache,mode=max
