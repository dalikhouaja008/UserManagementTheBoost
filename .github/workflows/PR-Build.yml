name: Build and Test

on:
  workflow_dispatch:
  push:
    branches: 
     - 'test_ci-*'
    paths-ignore:
     - '**.md'
     - 'docs/**'
     - '.gitignore'
     - 'LICENSE'

jobs:
  all-tasks:
    name: Build, Test, and Lint
    runs-on: ubuntu-latest
    
    steps:
    # Setup environment
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: '7.0'

    - name: Install dependencies
      run: npm ci
    
    # Determine changed files
    - name: Get changed files
      id: changed-files
      uses: dorny/paths-filter@v2
      with:
        filters: |
          src:
            - 'src/**/*.ts'
          test:
            - 'test/**/*.ts'
          e2e:
            - 'test/**/*.e2e-spec.ts'

    # Linting - Always run on changed files
    - name: Run ESLint
      run: npm run lint
      
    # Unit Tests - Run only if src or test files changed
    - name: Unit Tests
      run: npm run test -- --findRelatedTests $(git diff --name-only origin/main)
      
    # E2E Tests - Run only if relevant files changed
    - name: Run e2e tests
      if: steps.changed-files.outputs.e2e == 'true' || steps.changed-files.outputs.src == 'true'
      run: npm run test:e2e

    # Coverage - Generate only if tests were run
    - name: Generate test coverage
      if: steps.changed-files.outputs.src == 'true' || steps.changed-files.outputs.test == 'true'
      run: npm run test:cov

    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.sha }}
        path: coverage/
        retention-days: 7
      
    # Building
    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ github.sha }}
        path: dist/
        retention-days: 1

    # Status notification
    - name: Check status
      if: always()
      run: |
        if [[ "${{ job.status }}" == "success" ]]; then
          echo "✅ All steps completed successfully!"
        else
          echo "❌ One or more steps failed!"
          exit 1
        fi